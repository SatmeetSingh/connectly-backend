using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Hosting;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace dating_app_backend.src.Models.Entity
{
    public interface IUser
    {
        Guid Id { get; set; }
        string Username { get; set; }
        string Email { get; set; }
        string Password { get; set; }
        string FirstName { get; set; }
        string LastName { get; set; }
        string ProfilePicture { get; set; }
        string Bio { get; set; }
        DateTime CreatedDate { get; set; }
        DateTime? UpdatedDate { get; set; }
        int FollowersCount { get; set; }
        int FollowingCount { get; set; }
        bool IsActive { get; set; }
        List<PostModel> Posts { get; set; }
    }



    [Table("Users")]
    public class UserModel : IUser
    {

        /*
         * [DatabaseGenerated(DatabaseGeneratedOption.Identity)]: This attribute indicates that the GUID should be generated by EF Core. It works well in cases where you want the GUID to be created on the application side instead of the database side.
         * -----------------------------------------
         * [Key] : Marks a property as the primary key.
         */
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public Guid Id { get; set; }
        [Required]
        [StringLength(80)]
        public string Username { get; set; } = string.Empty;
        [Required]
        [StringLength(254)]
        public string Email { get; set; } = string.Empty;
        [Required]
        [StringLength(100)]
        public string Password { get; set; } = string.Empty;
        [StringLength(80)]
        public string FirstName { get; set; } = string.Empty;
        [StringLength(80)]
        public string LastName { get; set; } = string.Empty;
        public string ProfilePicture { get; set; } = string.Empty;
        [MaxLength(500)]
        public string Bio { get; set; } = string.Empty;
        [Precision(3)]
        public DateTime CreatedDate { get; set; } = DateTime.UtcNow;
        [Precision(3)]
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public DateTime? UpdatedDate { get; set; }
        public int FollowersCount { get; set; } = 0;
        public int FollowingCount { get; set; } = 0;
        public bool IsActive { get; set; } = true;

        public List<PostModel> Posts { get; set; } = new List<PostModel>();
    }
}
